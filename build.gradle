import org.w3c.dom.Element
import org.w3c.dom.Node
import org.w3c.dom.NodeList

//We need this in the parent project since it else not discovered by the subprojects.
buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

//Setup a property to hold all leaf projects.
//Aka projects that are here only for organizational structure need to get eliminated
//From configuration.
ext {
    leafProjects = new HashSet<Project>()
}

//Collect all leaf projects into a property to use.
project.allprojects(new Action<Project>() {
    @Override
    void execute(final Project candidate) {
        if (candidate.getChildProjects().isEmpty())
            leafProjects.add(candidate)
    }
})

//We only configure the leaf projects. We do not care about the root project or any inbetween project.
configure(leafProjects) {projectToConfigure ->
    projectToConfigure.logger.lifecycle("Setting up project: " + projectToConfigure.getPath() + " as leaf project.")
    
    //Add the central repository so that we always have access to our cached dependencies.
    repositories {
        maven {
            name 'LDTTeam - Modding'
            url 'https://ldtteam.jfrog.io/ldtteam/modding/'
        }
    }
    
    //We want a unique project identifier based on the projects full name.
    //Get the projects path (:projectRoot:projectTwo)
    //Strip the initial :
    //Replace all remaining : with -
    ext {
        projectIdentifier = projectToConfigure.getPath().substring(1).replace(":", "-")
    }
    
    //Setup the plugins that we need.
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'
    
    //Setup group, version and basename.
    group = "com.ldtteam.blockout"
    version = System.getenv().containsKey("Version") ? System.getenv("Version") : "borked-" + System.currentTimeMillis()
    archivesBaseName = "blockout-$projectIdentifier"

    //Force minecraft compatible versions of dependencies
    configurations.all {
        resolutionStrategy {
            force 'com.google.guava:guava:21.0'
        }
    }

    //All projects should be able to shade artifacts into them selfs.
    configurations {
        shade {
            transitive = false
        }
        shadeTransitive{}
        shadeDeobf {
            transitive = false
        }
        shadeDeobfTransitive{}

        shadeDeobf.extendsFrom shadeDeobfTransitive
        shade.extendsFrom shadeDeobf
        shade.extendsFrom shadeTransitive
        
        compile.extendsFrom shade
        deobfCompile.extendsFrom shadeDeobf
    }

    //All mods have the same test harness.
    //JUNIT, MOCKITO, POWERMOCK and HAMCREST are being added here.
    dependencies {
        shadeTransitive (group: 'com.ldtteam.jvoxelizer', name: 'jvoxelizer-api', version: jvoxelizer_version)

        compile 'com.intellij:annotations:+@jar'
        
        testCompile 'junit:junit:4.11'
        testCompile "org.mockito:mockito-core:1.+"
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.4'
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
        testCompile group: 'pl.pragmatists', name:'JUnitParams', version: '1.1.1'
    }

    projectToConfigure.afterEvaluate {projectToConfigureAfterEvaluate ->
        jar {
            from (projectToConfigure.configurations.shade.files){
                include '*'
                into 'META-INF/libraries'
            }

            manifest {
                attributes([
                        'ContainedDeps': projectToConfigure.configurations.shade.files.collect { it.name }.join(' '),
                        'Maven-Artifact': "${projectToConfigure.group}:${projectToConfigure.archivesBaseName}:${projectToConfigure.version}",
                        'Timestamp': System.currentTimeMillis(),
                ])
            }
        }
    }
    
    //Setup for which java version we are compiling
    //Minecraft defaults to 1.8, anything higher does currently not work with Forge.
    sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
    compileJava {
        sourceCompatibility = targetCompatibility = '1.8'
    }
    
    //Setup the compiler to output all information we need.
    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint"
    }

    //Create a sources jar.
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    //Create a javadoc jar.
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    //Define what to publish and how.
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = project.group
                artifactId "blockout-$projectIdentifier"

                from components.java
                artifact javadocJar
                artifact sourcesJar

                pom {
                    url = 'https://github.com/ldtteam/BlockOut'
                    licenses {
                        license {
                            name = 'GNU GENERAL PUBLIC LICENSE Version 3'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                        }
                    }
                    developers {
                        developer {
                            id = 'OrionDevelopment'
                            name = 'Marc Hermans'
                            email = 'oriondevelopment@outlook.com'
                        }
                    }
                    contributors {
                        contributor {
                            id = 'ldtteam'
                            name = 'Let\'s Develop Together - Team'
                            email = 'info@ldtteam.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/ldtteam/blockout.git'
                        developerConnection = 'scm:git:ssh://github.com/ldtteam/blockout.git'
                        url = 'https://github.com/ldtteam/BlockOut'
                    }
                }

                //Replace all deobf dependencies with normal jar references.
                pom.withXml { xmlProvider ->
                    final Element document = xmlProvider.asElement()
                    final NodeList groupIdNodes = document.getElementsByTagName("groupId")
                    groupIdNodes.each { groupIdNodeObject ->
                        final Node groupIdNode = (Node) groupIdNodeObject
                        final String groupId = groupIdNode.getFirstChild().getTextContent().trim()
                        groupIdNode.setTextContent(groupId.replace("deobf.", ""))
                    }
                }
            }
        }
    }
    
    //Notify artifactory of what to publish.
    artifactory {
        publish {
            defaults {
                publications('maven')
                publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
                publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
                publishPom = true   //Publish generated POM files to Artifactory (true by default).
            }
        }
    }
}

//Configure the root project for publishing.
project.configure([project]) { rootProject ->
    //Setup the plugins that we need.
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    //Setup group, version and basename.
    group = "com.ldtteam.blockout"
    version = System.getenv().containsKey("Version") ? System.getenv("Version") : "borked-" + System.currentTimeMillis()
    
    //Define what to publish and how.
    publishing {
        publications {
            maven(MavenPublication) {
                artifactId "blockout"

                pom {
                    url = 'https://github.com/ldtteam/BlockOut'
                    licenses {
                        license {
                            name = 'GNU GENERAL PUBLIC LICENSE Version 3'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                        }
                    }
                    developers {
                        developer {
                            id = 'OrionDevelopment'
                            name = 'Marc Hermans'
                            email = 'oriondevelopment@outlook.com'
                        }
                    }
                    contributors {
                        contributor {
                            id = 'ldtteam'
                            name = 'Let\'s Develop Together - Team'
                            email = 'info@ldtteam.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/ldtteam/blockout.git'
                        developerConnection = 'scm:git:ssh://github.com/ldtteam/blockout.git'
                        url = 'https://github.com/ldtteam/BlockOut'
                    }
                }
            }
        }
    }

    //Notify artifactory of what to publish.
    artifactory {
        publish {
            defaults {
                publications('maven')
            }
        }
    }
}





